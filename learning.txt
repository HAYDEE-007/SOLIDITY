//SPDX-License-Identifier: haydee
pragma solidity 0.8.18; // haydee 1st smart contract
contract SimpleStorage {
// favourite number from cyprian 

uint256  public   favnum;

uint256[] listoffavnum; // [0, 1, 3, 7]

struct Person{
    uint256 myfavnum;
    string name;
}
Person[] public listofpeople;

// Person public haydee = Person(11, "haydee"); // [{name: "bob", myfavnum: 1},
// Person public aydee = Person(0, "aydee"); // [{name: "bob", myfavnum: 1},
// Person public ydee = Person(10, "ydee"); // [{name: "bob", myfavnum: 1},

function store(uint256 _favnum) public {favnum = _favnum;

}
function retrieve() public view returns (uint256){return favnum;}

function addPerson(string memory _name, uint256 _myfavnum) public{
    listofpeople.push(Person(_myfavnum,_name)); // list of people
    }
// get person 
function getPerson(uint256 index)public view returns (string memory ){return listofpeople[index].name;
} 
//  calldata, memory, storage explanations
function callperson(string calldata _name, uint256 _myfavnum) public  {
    Listoffavnum.push( Person(_myfavnum,_name) );
}
} 
